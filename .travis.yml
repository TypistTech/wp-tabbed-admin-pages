language: php

dist: trusty

sudo: false

branches:
  only:
    - master
    - /^(?:(\d+)\.)?(?:(\d+)\.)?(\*|\d+)$/

services:
  - mysql

cache:
  apt: true
  directories:
    - $HOME/.composer/cache/files

notifications:
  email:
    on_success: never
    on_failure: change

php:
  - 7.0
  - 7.1
  - nightly

env:
  global:
    - COMPOSER_NO_INTERACTION=1
  matrix:
    - WP_VERSION=nightly
    - WP_VERSION=latest WITH_COVERAGE=true
    - WP_VERSION=4.8.2
    - WP_VERSION=4.7.6
    - WP_VERSION=nightly COMPOSER_UPDATE_DEPENDENCIES=true
    - WP_VERSION=latest COMPOSER_UPDATE_DEPENDENCIES=true
    - WP_VERSION=4.8.2 COMPOSER_UPDATE_DEPENDENCIES=true
    - WP_VERSION=4.7.6 COMPOSER_UPDATE_DEPENDENCIES=true

matrix:
  allow_failures:
    - php: nightly
    - env:
      - WP_VERSION=nightly
      - WP_VERSION=nightly COMPOSER_UPDATE_DEPENDENCIES=true
  fast_finish: true

before_install:
  # Set environment variables
  - if [[ $(phpenv version-name) == "nightly" ]]; then export WITH_COVERAGE=false; fi

  # Disable xDebug to speed up the build unless test coverage is needed
  - if [[ "$WITH_COVERAGE" != true && $(phpenv version-name) != "nightly" ]]; then phpenv config-rm xdebug.ini; fi

  # Install helper scripts
  - travis_retry composer global require --prefer-dist --no-suggest typisttech/travis-nginx-wordpress
  - export PATH=$HOME/.composer/vendor/bin:$PATH
  - tnw-install-wordpress

  # Build the demo plugin
  - if [[ "$COMPOSER_UPDATE_DEPENDENCIES" == true ]]; then travis_retry composer build-with-update; fi
  - if [[ "$COMPOSER_UPDATE_DEPENDENCIES" != true ]]; then travis_retry composer build; fi

  # Activate the plugin
  - wp plugin install ./release/wp-tabbed-admin-pages.zip --force --activate --path=/tmp/wordpress
  # Export a dump of plugin-activated database to the _data folder
  - wp db export $TRAVIS_BUILD_DIR/tests/_data/dump.sql --path=/tmp/wordpress

install:
  - if [[ "$COMPOSER_UPDATE_DEPENDENCIES" == true ]]; then travis_retry composer update --prefer-dist; fi
  - if [[ "$COMPOSER_UPDATE_DEPENDENCIES" != true ]]; then travis_retry composer install --prefer-dist; fi

script:
  - if [[ "$WITH_COVERAGE" == true ]]; then composer test-with-coverage; fi
  - if [[ "$WITH_COVERAGE" != true ]]; then composer test; fi

after_script:
  - if [[ "$WITH_COVERAGE" == true ]]; then travis_retry tnw-upload-coverage-to-scrutinizer; fi
  - if [[ "$WITH_COVERAGE" == true ]]; then travis_retry tnw-upload-coverage-to-codecov; fi
